services:
  # MarkHub 前端服务 (Next.js) - 开发环境
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: development
    container_name: markhub-frontend-dev
    ports:
      - "3000:3000"
    environment:
      # 前端连接到后端服务的API地址
      # 开发环境：浏览器通过宿主机端口访问后端容器
      # 注意：NEXT_PUBLIC_ 变量会暴露给浏览器，浏览器无法解析Docker内部服务名
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8090
    volumes:
      # 挂载源代码以支持热重载
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - markhub-network

  # MarkHub 后端服务 (Go + PocketBase) - 开发环境
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
      target: development
    container_name: markhub-backend-dev
    ports:
      - "8090:8090"
    environment:
      # 开发环境的PocketBase URL
      - POCKETBASE_URL=http://0.0.0.0:8090
      
      # 🔧 开发环境JWT密钥 - 仅用于开发测试
      # 生产环境请使用更强的密钥
      - JWT_SECRET=dev_jwt_secret_key_32_characters_long_for_development_only
      
      # 🔧 开发环境加密密钥 - 仅用于开发测试  
      # 生产环境请使用更强的密钥
      - ENCRYPTION_KEY=dev_encryption_key_32_chars_long
    volumes:
      # 挂载源代码以支持热重载
      - ./backend:/app
      # 持久化开发环境的数据库
      - pocketbase-dev-data:/app/pb_data
    restart: unless-stopped
    networks:
      - markhub-network
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://localhost:8090/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# 定义持久化存储
volumes:
  # 开发环境的PocketBase数据持久化存储
  pocketbase-dev-data:
    driver: local

# 定义网络
networks:
  markhub-network:
    driver: bridge